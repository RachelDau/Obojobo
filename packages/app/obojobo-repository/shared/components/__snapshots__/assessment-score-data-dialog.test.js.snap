// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AssessmentScoreDataDialog AssessmentScoreDataDialog renders correctly when history is loading 1`] = `
<div
  className="assessment-score-data-dialog"
>
  <div
    className="assessment-score-data-dialog--header"
  >
    <div
      className="repository--module-icon--image"
    >
      <img
        height="100%"
        src="/library/module-icon/mock-draft-id"
        width="100%"
      />
    </div>
    <div
      className="title"
    >
      mock-title
    </div>
    <button
      aria-label="Close dialog"
      className="repository--button close-button"
      onClick={[Function]}
    >
      ×
    </button>
  </div>
  <div
    className="assessment-score-data-dialog--body"
  >
    <div
      className="repository--assessment-stats"
    >
      <div
        className="settings"
      >
        <label
          className="view-mode"
        >
          <span>
            Showing:
          </span>
          <select
            onChange={[Function]}
            value="final-assessment-scores"
          >
            <option
              value="final-assessment-scores"
            >
              Final Assessment Scores
            </option>
            <option
              value="all-attempts"
            >
              All Attempt Scores
            </option>
          </select>
        </label>
        <div
          className="filters"
        >
          <span>
            Filters:
          </span>
          <div
            className="repository--assessment-stats-filter-controls"
          >
            <div
              className="container"
            >
              <label>
                <input
                  checked={false}
                  className="show-incomplete-attempts"
                  onChange={[Function]}
                  type="checkbox"
                />
                <span>
                  Include incomplete attempt data
                </span>
              </label>
              <label>
                <input
                  checked={false}
                  className="show-preview-attempts"
                  onChange={[Function]}
                  type="checkbox"
                />
                <span>
                  Include preview attempt data
                </span>
              </label>
              <hr />
              <label>
                <input
                  className="show-advanced-fields"
                  onChange={[Function]}
                  type="checkbox"
                />
                <span>
                  Show advanced fields
                </span>
              </label>
            </div>
          </div>
          <div
            className="repository--assessment-stats-search-controls"
          >
            <div
              className="search-by-text"
            >
              <label
                htmlFor="search-by"
              >
                Search by: 
              </label>
              <select
                id="search-by"
                onChange={[Function]}
              >
                <option
                  value=""
                >
                  Select a search parameter
                </option>
                <option
                  value="course-title"
                >
                  Course title
                </option>
                <option
                  value="resource-link-title"
                >
                  Resource link title
                </option>
                <option
                  value="user-first-name"
                >
                  First name
                </option>
                <option
                  value="user-last-name"
                >
                  Last name
                </option>
              </select>
            </div>
            <div
              className="search-by-date"
            >
              <label
                htmlFor="date-range"
              >
                Select a date range: 
              </label>
              <div
                className="date-range"
              >
                <input
                  onChange={[Function]}
                  type="date"
                />
                <input
                  onChange={[Function]}
                  type="date"
                />
              </div>
            </div>
          </div>
        </div>
      </div>
      <div
        className="repository--data-grid-assessments"
      >
        <div
          className="repository--data-grid-scores"
        >
          <div
            className="data-grid"
          >
            <div
              className="react-data-table-component"
              columns={
                Array [
                  Object {
                    "advanced": false,
                    "name": "Course Title",
                    "selector": "courseTitle",
                    "sortable": true,
                  },
                  Object {
                    "advanced": false,
                    "name": "Resource Link Title",
                    "selector": "resourceLinkTitle",
                    "sortable": true,
                  },
                  Object {
                    "advanced": false,
                    "cell": [Function],
                    "name": "URL",
                    "selector": "launchPresentationReturnUrl",
                    "sortable": true,
                  },
                  Object {
                    "advanced": false,
                    "name": "First Name",
                    "selector": "userFirstName",
                    "sortable": true,
                  },
                  Object {
                    "advanced": false,
                    "name": "Last Name",
                    "selector": "userLastName",
                    "sortable": true,
                  },
                  Object {
                    "advanced": false,
                    "cell": [Function],
                    "name": "Final Assessment Score",
                    "selector": "highestAssessmentScore",
                    "sortable": true,
                  },
                  Object {
                    "advanced": false,
                    "cell": [Function],
                    "name": "Preview Mode",
                    "selector": "isPreview",
                    "sortable": true,
                  },
                ]
              }
              data={Array []}
              dense={true}
              keyField="attemptId"
              striped={true}
              title="Final Assessment Scores"
            >
              react-data-table-component
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`AssessmentScoreDataDialog AssessmentScoreDataDialog renders correctly when no attempt data 1`] = `
<div
  className="assessment-score-data-dialog"
>
  <div
    className="assessment-score-data-dialog--header"
  >
    <div
      className="repository--module-icon--image"
    >
      <img
        height="100%"
        src="/library/module-icon/mock-draft-id"
        width="100%"
      />
    </div>
    <div
      className="title"
    >
      mock-title
    </div>
    <button
      aria-label="Close dialog"
      className="repository--button close-button"
      onClick={[Function]}
    >
      ×
    </button>
  </div>
  <div
    className="assessment-score-data-dialog--body"
  >
    <div
      className="repository--assessment-stats"
    >
      <div
        className="settings"
      >
        <label
          className="view-mode"
        >
          <span>
            Showing:
          </span>
          <select
            onChange={[Function]}
            value="final-assessment-scores"
          >
            <option
              value="final-assessment-scores"
            >
              Final Assessment Scores
            </option>
            <option
              value="all-attempts"
            >
              All Attempt Scores
            </option>
          </select>
        </label>
        <div
          className="filters"
        >
          <span>
            Filters:
          </span>
          <div
            className="repository--assessment-stats-filter-controls"
          >
            <div
              className="container"
            >
              <label>
                <input
                  checked={false}
                  className="show-incomplete-attempts"
                  onChange={[Function]}
                  type="checkbox"
                />
                <span>
                  Include incomplete attempt data
                </span>
              </label>
              <label>
                <input
                  checked={false}
                  className="show-preview-attempts"
                  onChange={[Function]}
                  type="checkbox"
                />
                <span>
                  Include preview attempt data
                </span>
              </label>
              <hr />
              <label>
                <input
                  className="show-advanced-fields"
                  onChange={[Function]}
                  type="checkbox"
                />
                <span>
                  Show advanced fields
                </span>
              </label>
            </div>
          </div>
          <div
            className="repository--assessment-stats-search-controls"
          >
            <div
              className="search-by-text"
            >
              <label
                htmlFor="search-by"
              >
                Search by: 
              </label>
              <select
                id="search-by"
                onChange={[Function]}
              >
                <option
                  value=""
                >
                  Select a search parameter
                </option>
                <option
                  value="course-title"
                >
                  Course title
                </option>
                <option
                  value="resource-link-title"
                >
                  Resource link title
                </option>
                <option
                  value="user-first-name"
                >
                  First name
                </option>
                <option
                  value="user-last-name"
                >
                  Last name
                </option>
              </select>
            </div>
            <div
              className="search-by-date"
            >
              <label
                htmlFor="date-range"
              >
                Select a date range: 
              </label>
              <div
                className="date-range"
              >
                <input
                  onChange={[Function]}
                  type="date"
                />
                <input
                  onChange={[Function]}
                  type="date"
                />
              </div>
            </div>
          </div>
        </div>
      </div>
      <div
        className="repository--data-grid-assessments"
      >
        <div
          className="repository--data-grid-scores"
        >
          <div
            className="data-grid"
          >
            <div
              className="react-data-table-component"
              columns={
                Array [
                  Object {
                    "advanced": false,
                    "name": "Course Title",
                    "selector": "courseTitle",
                    "sortable": true,
                  },
                  Object {
                    "advanced": false,
                    "name": "Resource Link Title",
                    "selector": "resourceLinkTitle",
                    "sortable": true,
                  },
                  Object {
                    "advanced": false,
                    "cell": [Function],
                    "name": "URL",
                    "selector": "launchPresentationReturnUrl",
                    "sortable": true,
                  },
                  Object {
                    "advanced": false,
                    "name": "First Name",
                    "selector": "userFirstName",
                    "sortable": true,
                  },
                  Object {
                    "advanced": false,
                    "name": "Last Name",
                    "selector": "userLastName",
                    "sortable": true,
                  },
                  Object {
                    "advanced": false,
                    "cell": [Function],
                    "name": "Final Assessment Score",
                    "selector": "highestAssessmentScore",
                    "sortable": true,
                  },
                  Object {
                    "advanced": false,
                    "cell": [Function],
                    "name": "Preview Mode",
                    "selector": "isPreview",
                    "sortable": true,
                  },
                ]
              }
              data={Array []}
              dense={true}
              keyField="attemptId"
              striped={true}
              title="Final Assessment Scores"
            >
              react-data-table-component
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`AssessmentScoreDataDialog AssessmentScoreDataDialog renders correctly with attempts 1`] = `
<div
  className="assessment-score-data-dialog"
>
  <div
    className="assessment-score-data-dialog--header"
  >
    <div
      className="repository--module-icon--image"
    >
      <img
        height="100%"
        src="/library/module-icon/mock-draft-id"
        width="100%"
      />
    </div>
    <div
      className="title"
    >
      mock-title
    </div>
    <button
      aria-label="Close dialog"
      className="repository--button close-button"
      onClick={[Function]}
    >
      ×
    </button>
  </div>
  <div
    className="assessment-score-data-dialog--body"
  >
    <div
      className="repository--assessment-stats"
    >
      <div
        className="settings"
      >
        <label
          className="view-mode"
        >
          <span>
            Showing:
          </span>
          <select
            onChange={[Function]}
            value="final-assessment-scores"
          >
            <option
              value="final-assessment-scores"
            >
              Final Assessment Scores
            </option>
            <option
              value="all-attempts"
            >
              All Attempt Scores
            </option>
          </select>
        </label>
        <div
          className="filters"
        >
          <span>
            Filters:
          </span>
          <div
            className="repository--assessment-stats-filter-controls"
          >
            <div
              className="container"
            >
              <label>
                <input
                  checked={false}
                  className="show-incomplete-attempts"
                  onChange={[Function]}
                  type="checkbox"
                />
                <span>
                  Include incomplete attempt data
                </span>
              </label>
              <label>
                <input
                  checked={false}
                  className="show-preview-attempts"
                  onChange={[Function]}
                  type="checkbox"
                />
                <span>
                  Include preview attempt data
                </span>
              </label>
              <hr />
              <label>
                <input
                  className="show-advanced-fields"
                  onChange={[Function]}
                  type="checkbox"
                />
                <span>
                  Show advanced fields
                </span>
              </label>
            </div>
          </div>
          <div
            className="repository--assessment-stats-search-controls"
          >
            <div
              className="search-by-text"
            >
              <label
                htmlFor="search-by"
              >
                Search by: 
              </label>
              <select
                id="search-by"
                onChange={[Function]}
              >
                <option
                  value=""
                >
                  Select a search parameter
                </option>
                <option
                  value="course-title"
                >
                  Course title
                </option>
                <option
                  value="resource-link-title"
                >
                  Resource link title
                </option>
                <option
                  value="user-first-name"
                >
                  First name
                </option>
                <option
                  value="user-last-name"
                >
                  Last name
                </option>
              </select>
            </div>
            <div
              className="search-by-date"
            >
              <label
                htmlFor="date-range"
              >
                Select a date range: 
              </label>
              <div
                className="date-range"
              >
                <input
                  onChange={[Function]}
                  type="date"
                />
                <input
                  onChange={[Function]}
                  type="date"
                />
              </div>
            </div>
          </div>
        </div>
      </div>
      <div
        className="repository--data-grid-assessments"
      >
        <div
          className="repository--data-grid-scores"
        >
          <div
            className="data-grid"
          >
            <div
              className="react-data-table-component"
              columns={
                Array [
                  Object {
                    "advanced": false,
                    "name": "Course Title",
                    "selector": "courseTitle",
                    "sortable": true,
                  },
                  Object {
                    "advanced": false,
                    "name": "Resource Link Title",
                    "selector": "resourceLinkTitle",
                    "sortable": true,
                  },
                  Object {
                    "advanced": false,
                    "cell": [Function],
                    "name": "URL",
                    "selector": "launchPresentationReturnUrl",
                    "sortable": true,
                  },
                  Object {
                    "advanced": false,
                    "name": "First Name",
                    "selector": "userFirstName",
                    "sortable": true,
                  },
                  Object {
                    "advanced": false,
                    "name": "Last Name",
                    "selector": "userLastName",
                    "sortable": true,
                  },
                  Object {
                    "advanced": false,
                    "cell": [Function],
                    "name": "Final Assessment Score",
                    "selector": "highestAssessmentScore",
                    "sortable": true,
                  },
                  Object {
                    "advanced": false,
                    "cell": [Function],
                    "name": "Preview Mode",
                    "selector": "isPreview",
                    "sortable": true,
                  },
                ]
              }
              data={
                Array [
                  Object {
                    "assessmentId": undefined,
                    "completedAt": null,
                    "contextId": undefined,
                    "courseTitle": undefined,
                    "draftContentId": undefined,
                    "draftId": undefined,
                    "highestAssessmentScore": undefined,
                    "isPreview": undefined,
                    "launchPresentationReturnUrl": undefined,
                    "moduleTitle": undefined,
                    "resourceLinkId": undefined,
                    "resourceLinkTitle": undefined,
                    "userFirstName": undefined,
                    "userId": undefined,
                    "userLastName": undefined,
                    "userRoles": undefined,
                    "username": undefined,
                  },
                ]
              }
              dense={true}
              keyField="attemptId"
              striped={true}
              title="Final Assessment Scores"
            >
              react-data-table-component
            </div>
          </div>
          <a
            className="repository--button "
            download="final-assessment-scores__"
            href="data:text/csv;charset=utf-8,%22Course%20Title%22%2C%22Resource%20Link%20Title%22%2C%22URL%22%2C%22First%20Name%22%2C%22Last%20Name%22%2C%22Final%20Assessment%20Score%22%2C%22Preview%20Mode%22%0A%22%22%2C%22%22%2C%22%22%2C%22%22%2C%22%22%2C%22%22%2C%22%22"
          >
            ⬇️   Download Table as CSV File (
            1
             row
            
            )
          </a>
        </div>
      </div>
    </div>
  </div>
</div>
`;
