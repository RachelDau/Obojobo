@import '~styles/includes';

.obojobo-draft--chunks--excerpt {
	$courier: 'Courier', monospace;
	$georgia: georgia;
	$helvetica: helvetica, arial, sans-serif;
	$tnr: 'Times New Roman', times, serif;
	$palatino: 'Palatino', $georgia, $tnr;

	$command-line-text: #d8d8d8;

	$modern-background: #f4f4f4;
	$modern-border: #cccccc;

	$retro-background: #d6d6d6;
	$terminal-background: #1b1916;

	// 1px 1px 2px
	$terminal-lines: repeating-linear-gradient(
		rgba(0, 0, 0, 0),
		rgba(0, 0, 0, 0) 0.0625em,
		$terminal-background 0.0625em,
		$terminal-background 0.125em
	);

	// can't believe stylelint has a problem with just using the color name
	$white: white;

	$terminal-green: #83ff27;
	$terminal-orange: #ffaa27;
	$terminal-purple: #a6a2ef;

	$yellow-paper-text: #443b35;
	$dark-yellow-paper-text: #565655;
	$aged-paper-text: #423120;
	$white-paper-text: #242425;

	$filled-background: #f9f9f9;
	$filled-text: #333333;

	position: relative;

	.excerpt-content {
		margin: 0 auto;
		padding: 1em 0;
		position: relative;
		text-align: left;

		> .overlay {
			pointer-events: none;
		}

		> .component[data-obo-component='true'] {
			padding-left: 0;
			padding-right: 0;
		}

		> .wrapper {
			position: relative;
		}
	}

	&.is-font-serif .component[data-obo-component='true'] {
		font-family: $font-text;
	}

	&.is-font-sans .component[data-obo-component='true'] {
		font-family: $font-default;
	}

	&.is-font-monospace .component[data-obo-component='true'] {
		font-family: $font-monospace;

		> .text-chunk > h1,
		> .text-chunk > h2,
		> .text-chunk > h3,
		> .text-chunk > h4,
		> .text-chunk > h5,
		> .text-chunk > h6 {
			font-family: $font-monospace;
		}
	}

	&.is-font-times-new-roman .component[data-obo-component='true'] {
		font-family: $tnr;
		font-size: 0.9em;

		> .text-chunk > h1,
		> .text-chunk > h2,
		> .text-chunk > h3,
		> .text-chunk > h4,
		> .text-chunk > h5,
		> .text-chunk > h6 {
			font-family: $tnr;
		}
	}

	&.is-font-georgia .component[data-obo-component='true'] {
		font-family: $georgia, $tnr;

		> .text-chunk > h1,
		> .text-chunk > h2,
		> .text-chunk > h3,
		> .text-chunk > h4,
		> .text-chunk > h5,
		> .text-chunk > h6 {
			font-family: $georgia, $tnr;
		}
	}

	&.is-font-helvetica .component[data-obo-component='true'] {
		font-family: $helvetica;

		> .text-chunk > h1,
		> .text-chunk > h2,
		> .text-chunk > h3,
		> .text-chunk > h4,
		> .text-chunk > h5,
		> .text-chunk > h6 {
			font-family: $helvetica;
		}
	}

	&.is-font-courier .component[data-obo-component='true'] {
		font-family: $courier;

		> .text-chunk > h1,
		> .text-chunk > h2,
		> .text-chunk > h3,
		> .text-chunk > h4,
		> .text-chunk > h5,
		> .text-chunk > h6 {
			font-family: $courier;
		}
	}

	&.is-font-palatino .component[data-obo-component='true'] {
		font-family: $palatino;

		> .text-chunk > h1,
		> .text-chunk > h2,
		> .text-chunk > h3,
		> .text-chunk > h4,
		> .text-chunk > h5,
		> .text-chunk > h6 {
			font-family: $palatino;
		}
	}

	&.is-line-height-type-compact .obo-text {
		line-height: 1.5em;
	}

	&.is-line-height-type-moderate .obo-text {
		line-height: 1.7em;
	}

	&.is-line-height-type-generous .obo-text {
		line-height: 2em;
	}

	&.is-font-size-smaller {
		.excerpt-content > .wrapper > .component[data-obo-component='true'] {
			font-size: 0.85em;
		}

		.component-toolbar {
			font-size: 1.1764705882em;
		}
	}

	&.is-font-size-larger {
		.excerpt-content > .wrapper > .component[data-obo-component='true'] {
			font-size: 1.15em;
		}

		.component-toolbar {
			font-size: 0.8695652174em;
		}
	}

	blockquote {
		margin: 0;
		text-align: center;

		> cite {
			margin-top: 0.5em;
			display: inline-block;
			font-style: normal;
			font-family: $font-default;
			color: $color-text-minor;
			font-size: 0.7em;
			position: relative;
			text-align: center;
		}
	}

	&.is-width-tiny {
		.excerpt-content {
			max-width: 20em;
		}

		cite {
			width: 100%;
			max-width: 28.57em;
		}
	}

	&.is-width-small {
		.excerpt-content {
			max-width: 25em;
		}

		cite {
			width: 100%;
			max-width: 35.71em;
		}
	}

	&.is-width-medium {
		.excerpt-content {
			max-width: 31em;
		}

		cite {
			width: 100%;
			max-width: 44.29em;
		}
	}

	&.is-width-large {
		.excerpt-content,
		cite {
			margin-left: 0;
			margin-right: 0;
		}

		cite {
			width: 100%;
		}
	}

	&.is-body-style-type-filled-box {
		.excerpt-content {
			background: $filled-background;
			color: $filled-text;
			border-radius: 0.25em;
		}
	}

	&.is-body-style-type-bordered-box {
		.excerpt-content {
			border: 1px solid rgba(0, 0, 0, 0.1);
			border-radius: $dimension-rounded-radius;
			border-radius: 0.25em;
		}
	}

	&.is-body-style-type-card {
		.excerpt-content {
			box-shadow: 0 5px 5px rgba(0, 0, 0, 0.1);
			background: $filled-background;

			.obo-text,
			.katex {
				color: $filled-text;
			}
		}
	}

	&.is-body-style-type-command-line {
		.excerpt-content {
			border-radius: $dimension-rounded-radius;
			border-radius: 0.25em;
			background: $terminal-background;

			.obo-text,
			.katex {
				color: $command-line-text;
			}
		}
	}

	&.is-body-style-type-none {
		blockquote {
			margin-top: 0;
			margin-bottom: 0;
		}

		.excerpt-content {
			padding-top: 0;
			padding-bottom: 0;
		}
	}

	&.is-body-style-type-modern-text-file {
		.excerpt-content {
			border-radius: 0.25em;
			background: $modern-background;
			border: 2px solid $modern-border;
			padding-bottom: 0;
		}

		.wrapper {
			margin-top: 0.5em;
			background: $white;
			border-bottom-left-radius: 0.25em;
			border-bottom-right-radius: 0.25em;
			border-top: 2px solid $modern-border;
			padding-top: 1em;
			padding-bottom: 1em;
		}

		.wrapper::before {
			content: ' ';
			width: 6.85em; // 130px
			height: 1.475em; // 28px
			position: absolute;
			left: 2em;
			top: 0;
			transform: translate(0, -100%);
			background: url(./images/tab.svg);
			background-size: cover;
		}

		&.is-showing-effect {
			.excerpt-content {
				box-shadow: 0 0.5em 0.45em rgba(0, 0, 0, 0.2); // 0 10px 9px
			}
		}
	}

	&.is-body-style-type-retro-text-file {
		/*
		stylelint complains about this rule's specificity, but fixing it would
		require deconstructing every style hierarchy so we're ignoring it instead
		*/
		// stylelint-disable-next-line no-descending-specificity
		.excerpt-content {
			border: 1px solid black;
			background: $retro-background;
			padding-top: 1.5em;
			padding-left: 0.2em;
			padding-right: 0.2em;
			padding-bottom: 0.2em;

			.wrapper {
				background: $white;
				border: 1px solid black;
				padding-top: 0.5em;
				padding-bottom: 1em;
			}

			.pad {
				padding-left: 2em;
				padding-right: 2em;
			}
		}

		.wrapper::before {
			content: ' ';
			width: 100%;
			height: 0.84em; // 16px
			position: absolute;
			left: 0;
			top: -1.2em;
			background: url(./images/retro-document-top.svg);
		}

		&.is-showing-effect {
			.excerpt-content {
				box-shadow: 0.1em 0.1em black; // 2px
			}
		}
	}

	&.is-body-style-type-term-white {
		/*
		stylelint complains about this rule's specificity, but fixing it would
		require deconstructing every style hierarchy so we're ignoring it instead
		*/
		// stylelint-disable-next-line no-descending-specificity
		.excerpt-content {
			border-radius: $dimension-rounded-radius * 3;
			background: linear-gradient(#383635, $terminal-background);

			.obo-text,
			.katex {
				color: $white;
			}
		}

		&.is-showing-effect {
			.excerpt-content {
				.obo-text,
				.katex {
					// 1px 1px 11px, 1px 1px 11px
					//stylelint-disable-next-line declaration-colon-newline-after, value-list-comma-newline-after
					text-shadow: 0.0625em 0.0625em 0.6875em rgba(255, 255, 255, 0.3),
						0.0625em 0.0625em 0.6875em rgba(255, 255, 255, 0.3);
				}
			}

			.overlay {
				border-radius: $dimension-rounded-radius * 3;
				width: 100%;
				position: absolute;
				left: 0;
				top: 0;
				right: 0;
				bottom: 0;
				background: $terminal-lines;
				opacity: 0.2;
			}
		}
	}

	&.is-body-style-type-term-green {
		/*
		stylelint complains about this rule's specificity, but fixing it would
		require deconstructing every style hierarchy so we're ignoring it instead
		*/
		// stylelint-disable-next-line no-descending-specificity
		.excerpt-content {
			border-radius: $dimension-rounded-radius * 3;
			background: linear-gradient(#383635, $terminal-background);

			// same here
			// stylelint-disable no-descending-specificity
			.obo-text,
			.katex {
				color: $terminal-green;
			}
			// stylelint-enable no-descending-specificity
		}

		&.is-showing-effect {
			.excerpt-content {
				.obo-text,
				.katex {
					// 1px 1px 11px, 1px 1px 11px
					//stylelint-disable-next-line declaration-colon-newline-after, value-list-comma-newline-after
					text-shadow: 0.0625em 0.0625em 0.6875em rgba(131, 255, 39, 0.3),
						0.0625em 0.0625em 0.6875em rgba(131, 255, 39, 0.3);
				}
			}

			.overlay {
				border-radius: $dimension-rounded-radius * 3;
				width: 100%;
				position: absolute;
				left: 0;
				top: 0;
				right: 0;
				bottom: 0;
				background: $terminal-lines;
				opacity: 0.2;
			}
		}
	}

	&.is-body-style-type-term-orange {
		/*
		stylelint complains about this rule's specificity, but fixing it would
		require deconstructing every style hierarchy so we're ignoring it instead
		*/
		// stylelint-disable-next-line no-descending-specificity
		.excerpt-content {
			border-radius: $dimension-rounded-radius * 3;
			background: linear-gradient(#383635, $terminal-background);

			// same here
			// stylelint-disable no-descending-specificity
			.obo-text,
			.katex {
				color: $terminal-orange;
			}
			// stylelint-enable no-descending-specificity
		}

		&.is-showing-effect {
			.excerpt-content {
				.obo-text,
				.katex {
					// 1px 1px 11px, 1px 1px 11px
					//stylelint-disable-next-line declaration-colon-newline-after, value-list-comma-newline-after
					text-shadow: 0.0625em 0.0625em 0.6875em rgba(255, 170, 39, 0.3),
						0.0625em 0.0625em 0.6875em rgba(255, 170, 39, 0.3);
				}
			}

			.overlay {
				border-radius: $dimension-rounded-radius * 3;
				width: 100%;
				position: absolute;
				left: 0;
				top: 0;
				right: 0;
				bottom: 0;
				background: $terminal-lines;
				opacity: 0.2;
			}
		}
	}

	&.is-body-style-type-term-c64 {
		/*
		stylelint complains about this rule's specificity, but fixing it would
		require deconstructing every style hierarchy so we're ignoring it instead
		*/
		// stylelint-disable-next-line no-descending-specificity
		.excerpt-content {
			background: #181663;
			border: 1em solid $terminal-purple;

			// same here
			// stylelint-disable no-descending-specificity
			.obo-text,
			.katex {
				color: $terminal-purple;
			}
			// stylelint-enable no-descending-specificity
		}
	}

	&.is-body-style-type-light-yellow-paper {
		/*
		stylelint complains about this rule's specificity, but fixing it would
		require deconstructing every style hierarchy so we're ignoring it instead
		*/
		// stylelint-disable-next-line no-descending-specificity
		.excerpt-content {
			background: #fffcf8;
			box-shadow: 0 1px 1px rgba(0, 0, 0, 0.1);
			border: 1px solid rgba(0, 0, 0, 0.03);
			border-bottom: 1px solid rgba(0, 0, 0, 0.1);

			// same here
			// stylelint-disable no-descending-specificity
			.obo-text,
			.katex {
				color: $yellow-paper-text;
			}
			// stylelint-enable no-descending-specificity
		}

		&.is-showing-effect {
			.excerpt-content {
				background-image: url('./images/test.jpg');
				background-blend-mode: luminosity;
			}
		}
	}

	&.is-body-style-type-dark-yellow-paper {
		/*
		stylelint complains about this rule's specificity, but fixing it would
		require deconstructing every style hierarchy so we're ignoring it instead
		*/
		// stylelint-disable-next-line no-descending-specificity
		.excerpt-content {
			background: #fdf5ea;
			border-radius: 0.12em;
			box-shadow: 0 1px 1px rgba(0, 0, 0, 0.1);
			border-bottom: 1px solid rgb(220, 217, 212);

			// same here
			// stylelint-disable no-descending-specificity
			.obo-text,
			.katex {
				color: $dark-yellow-paper-text;
			}
			// stylelint-enable no-descending-specificity
		}

		&.is-showing-effect {
			.excerpt-content {
				background-image: url('./images/test.jpg');
				background-blend-mode: luminosity;
			}
		}
	}

	&.is-body-style-type-aged-paper {
		/*
		stylelint complains about this rule's specificity, but fixing it would
		require deconstructing every style hierarchy so we're ignoring it instead
		*/
		// stylelint-disable-next-line no-descending-specificity
		.excerpt-content {
			background: #fffcf8;
			box-shadow: 0 1px 1px rgba(0, 0, 0, 0.1);
			border: 1px solid rgba(0, 0, 0, 0.03);
			border-bottom: 1px solid rgba(0, 0, 0, 0.1);
			// allow for fallback
			/* stylelint-disable-next-line declaration-block-no-duplicate-properties */
			background: rgb(237, 220, 192);
			/* stylelint-disable-next-line declaration-block-no-duplicate-properties */
			background: radial-gradient(circle, #eddcc0 50%, #d6bb9e 100%);

			// same here
			// stylelint-disable no-descending-specificity
			.obo-text,
			.katex {
				color: $aged-paper-text;
			}
			// stylelint-enable no-descending-specificity
		}

		&.is-showing-effect {
			.excerpt-content {
				background: radial-gradient(circle, #eddcc0 50%, #d6bb9e 100%), url('./images/test.jpg');
				background-blend-mode: multiply;
			}
		}
	}

	&.is-body-style-type-white-paper {
		/*
		stylelint complains about this rule's specificity, but fixing it would
		require deconstructing every style hierarchy so we're ignoring it instead
		*/
		// stylelint-disable-next-line no-descending-specificity
		.excerpt-content {
			background: #fbfbfd;
			box-shadow: 0 1px 1px rgba(0, 0, 0, 0.1);
			border: 1px solid rgba(0, 0, 0, 0.03);
			border-bottom: 1px solid rgba(0, 0, 0, 0.1);

			// same here
			// stylelint-disable no-descending-specificity
			.obo-text,
			.katex {
				color: $white-paper-text;
			}
			// stylelint-enable no-descending-specificity
		}

		&.is-showing-effect {
			.excerpt-content {
				background-image: url('./images/test.jpg');
				background-blend-mode: luminosity;
			}
		}
	}

	&.is-body-style-type-modern-paper {
		/*
		stylelint complains about this rule's specificity, but fixing it would
		require deconstructing every style hierarchy so we're ignoring it instead
		*/
		// stylelint-disable-next-line no-descending-specificity
		.excerpt-content {
			background: #fbfbfd;
			background: #f9f8f7;
			box-shadow: 0 1px 1px rgba(0, 0, 0, 0.1);
			border: 1px solid rgba(0, 0, 0, 0.03);
			border-bottom: 1px solid rgba(0, 0, 0, 0.1);

			// same here
			// stylelint-disable no-descending-specificity
			.obo-text,
			.katex {
				color: $white-paper-text;
			}
			// stylelint-enable no-descending-specificity
		}

		&.is-showing-effect {
			.excerpt-content {
				background-image: url('./images/test.jpg');
				background-blend-mode: luminosity;
			}
		}
	}

	&.is-top-edge-type-fade {
		.excerpt-content::before {
			content: ' ';
			width: calc(100% + 0.375em); // 6px
			transform: translate(-0.1875em, 0.1875em); // -3px, 3px
			position: absolute;
			left: 0;
			top: -0.25em;
			height: 1.875em; // 30px
			background: $white;
			background: linear-gradient(180deg, rgba(255, 255, 255, 1) 10%, rgba(255, 255, 255, 0) 100%);
		}

		&.is-body-style-type-modern-text-file {
			.excerpt-content {
				padding-top: 0;
			}

			.wrapper {
				margin-top: 0;
				border-top: none;
				padding-top: 0;

				&::before {
					display: none;
				}
			}
		}

		&.is-body-style-type-retro-text-file {
			.excerpt-content {
				padding-top: 0;
			}

			.wrapper {
				margin-top: 0;
				border-top: none;
				padding-top: 0;

				&::before {
					display: none;
				}
			}
		}

		&.is-body-style-type-command-line,
		&.is-body-style-type-term-white,
		&.is-body-style-type-term-green,
		&.is-body-style-type-term-orange {
			.excerpt-content::before {
				background: linear-gradient(180deg, white 50%, rgba(255, 255, 255, 0) 100%);
			}

			.overlay::before {
				content: ' ';
				width: calc(100% + 0.375em); // 6px
				transform: translate(-0.1875em, 0.1875em); // -3px, 3px
				position: absolute;
				left: 0;
				top: 0;
				height: 1.875em; // 30px
				//stylelint-disable-next-line declaration-colon-newline-after
				background: linear-gradient(
					180deg,
					rgba(255, 255, 255, 1) 50%,
					rgba(255, 255, 255, 0) 100%
				);
			}
		}

		&.is-body-style-type-term-c64 {
			.excerpt-content::before {
				width: calc(100% + 3.125em); // 50px
				transform: translate(-1.5625em, -1.25em); // -25px, -20px
				height: 2.8125em; // 45px
				background: linear-gradient(180deg, white 50%, rgba(255, 255, 255, 0) 100%);
			}
		}
	}

	&.is-bottom-edge-type-fade {
		.excerpt-content::after {
			content: ' ';
			width: calc(100% + 0.375em); // 6px
			transform: translate(-0.1875em, 0.1875em); // -3px, 3px
			height: 1.875em; // 30px
			position: absolute;
			left: 0;
			bottom: 0;
			background: rgb(255, 255, 255);
			background: linear-gradient(0deg, rgba(255, 255, 255, 1) 10%, rgba(255, 255, 255, 0) 100%);
		}

		&.is-body-style-type-card {
			.excerpt-content::after {
				transform: translate(-3px, 13px);
				background: linear-gradient(0deg, rgba(255, 255, 255, 1) 50%, rgba(255, 255, 255, 0) 100%);
			}
		}

		&.is-body-style-type-retro-text-file {
			.excerpt-content::after {
				height: 3.875em; // 62px
			}
		}

		&.is-body-style-type-modern-text-file {
			.excerpt-content::after {
				width: calc(100% + 1.25em); // 20px
				transform: translate(-10px, 22px); // -10px, 22px
				height: 3.8125em; // 61px
				background: linear-gradient(0deg, white 50%, rgba(255, 255, 255, 0) 100%);
			}
		}

		&.is-body-style-type-command-line,
		&.is-body-style-type-term-white,
		&.is-body-style-type-term-green,
		&.is-body-style-type-term-orange {
			.excerpt-content::after {
				background: linear-gradient(0deg, white 50%, rgba(255, 255, 255, 0) 100%);
			}
		}

		&.is-body-style-type-term-c64 {
			.excerpt-content::after {
				width: calc(100% + 3.125em); // 50px
				transform: translate(-1.5625em, 1.25em); // -25px, 20px
				height: 2.8125em; // 45px
				background: linear-gradient(0deg, white 50%, rgba(255, 255, 255, 0) 100%);
			}
		}
	}

	&.is-top-edge-type-jagged {
		/*
		stylelint complains about this rule's specificity, but fixing it would
		require deconstructing every style hierarchy so we're ignoring it instead
		*/
		// stylelint-disable-next-line no-descending-specificity
		.excerpt-content::before {
			content: ' ';
			width: 100%;
			// this only seems to work at 10px for some reason
			// stylelint-disable-next-line unit-disallowed-list
			height: 10px;
			position: absolute;
			left: 0;
			top: 0;
			transform: rotate(180deg) translate(0, 10px);
		}

		&.is-body-style-type-bordered-box {
			.excerpt-content {
				border-top-left-radius: 0;
				border-top-right-radius: 0;

				&::before {
					background: url(./images/jagged-edge-bordered-box.svg);
				}
			}
		}
	}

	&.is-bottom-edge-type-jagged {
		/*
		stylelint complains about this rule's specificity, but fixing it would
		require deconstructing every style hierarchy so we're ignoring it instead
		*/
		// stylelint-disable-next-line no-descending-specificity
		.excerpt-content::after {
			content: ' ';
			width: 100%;
			// this only seems to work at 10px for some reason
			// stylelint-disable-next-line unit-disallowed-list
			height: 10px;
			position: absolute;
			left: 0;
			bottom: 0;
			transform: translate(0, 10px);
		}

		&.is-body-style-type-bordered-box {
			.excerpt-content {
				border-bottom-left-radius: 0;
				border-bottom-right-radius: 0;

				&::after {
					background: url(./images/jagged-edge-bordered-box.svg);
				}
			}
		}
	}

	&.is-top-edge-type-jagged.is-body-style-type-filled-box,
	&.is-top-edge-type-jagged.is-body-style-type-card {
		.excerpt-content::before {
			background: url(./images/jagged-edge-filled-box.svg);
		}
	}

	&.is-top-edge-type-jagged.is-body-style-type-white-paper {
		.excerpt-content::before {
			background: url(./images/jagged-edge-white-paper.svg);
		}
	}

	&.is-top-edge-type-jagged.is-body-style-type-modern-paper {
		.excerpt-content::before {
			background: url(./images/jagged-edge-modern-paper.svg);
		}
	}

	&.is-top-edge-type-jagged.is-body-style-type-light-yellow-paper {
		.excerpt-content::before {
			background: url(./images/jagged-edge-light-yellow-paper.svg);
		}
	}

	&.is-top-edge-type-jagged.is-body-style-type-dark-yellow-paper {
		.excerpt-content::before {
			background: url(./images/jagged-edge-dark-yellow-paper.svg);
		}
	}

	&.is-top-edge-type-jagged.is-body-style-type-aged-paper {
		.excerpt-content::before {
			background: url(./images/jagged-edge-aged-paper.svg);
		}
	}

	&.is-bottom-edge-type-jagged.is-body-style-type-filled-box,
	&.is-bottom-edge-type-jagged.is-body-style-type-card {
		.excerpt-content::after {
			background: url(./images/jagged-edge-filled-box.svg);
		}
	}

	&.is-bottom-edge-type-jagged.is-body-style-type-white-paper {
		.excerpt-content::after {
			background: url(./images/jagged-edge-white-paper.svg);
		}
	}

	&.is-bottom-edge-type-jagged.is-body-style-type-modern-paper {
		.excerpt-content::after {
			background: url(./images/jagged-edge-modern-paper.svg);
		}
	}

	&.is-bottom-edge-type-jagged.is-body-style-type-light-yellow-paper {
		.excerpt-content::after {
			background: url(./images/jagged-edge-light-yellow-paper.svg);
		}
	}

	&.is-bottom-edge-type-jagged.is-body-style-type-dark-yellow-paper {
		.excerpt-content::after {
			background: url(./images/jagged-edge-dark-yellow-paper.svg);
		}
	}

	&.is-bottom-edge-type-jagged.is-body-style-type-aged-paper {
		.excerpt-content::after {
			background: url(./images/jagged-edge-aged-paper.svg);
		}
	}
}
